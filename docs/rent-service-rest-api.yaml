openapi: 3.0.3
info:
  title: Rent Service REST API
  description: Rent Service REST API
  version: ''
  contact:
    name: Vincenzo Corso
    url: 'https://github.com/vincenzocorso'
    email: vincenzocorso99@gmail.com
servers:
  - url: 'http://rent-service:8080'
paths:
  /rents:
    get:
      summary: GetRents
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rent'
              examples:
                Rents:
                  value:
                    - customerId: CST1234
                      vehicleId: VH1234
                      rentId: RNT1234
                      currentState: PENDING
                      acceptedAt: '2019-08-24T14:15:22Z'
                      startedAt: '2019-08-24T14:15:22Z'
                      endedAt: '2019-08-24T14:15:22Z'
        '400':
          description: An error occured in the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-rents
      description: Gets a list of rents
      parameters:
        - schema:
            type: string
          in: query
          name: customerId
          description: The customer id
        - schema:
            type: array
            example: 'PENDING,STARTED'
            enum:
              - PENDING
              - REJECTED
              - ACCEPTED
              - STARTED
              - ENDED
          in: query
          name: states
          description: Array of rent states
          style: form
        - schema:
            type: integer
            minimum: 1
            default: 10
            maximum: 200
          in: query
          name: limit
          description: The number of results returned
        - schema:
            type: integer
            minimum: 0
            default: 0
          in: query
          name: offset
          description: The number of result to omit from the beginning
    post:
      summary: CreateRent
      operationId: create-rent
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
              examples:
                Rent:
                  value:
                    customerId: CST1234
                    vehicleId: VH1234
                    rentId: RNT1234
                    currentState: PENDING
                    acceptedAt: '2019-08-24T14:15:22Z'
                    startedAt: '2019-08-24T14:15:22Z'
                    endedAt: '2019-08-24T14:15:22Z'
        '400':
          description: An error occurred in the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Creates a new rent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentDetails'
            examples:
              RentDetails:
                value:
                  customerId: CST1234
                  vehicleId: VH1234
  '/rents/{rentId}':
    parameters:
      - schema:
          type: string
        name: rentId
        in: path
        required: true
        description: The rent id
    get:
      summary: GetRent
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
              examples:
                Rent:
                  value:
                    customerId: CST1234
                    vehicleId: VH1234
                    rentId: RNT1234
                    currentState: PENDING
                    acceptedAt: '2019-08-24T14:15:22Z'
                    startedAt: '2019-08-24T14:15:22Z'
                    endedAt: '2019-08-24T14:15:22Z'
        '404':
          description: The requested resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples: {}
      operationId: get-rent
      description: Gets a specific rent
components:
  schemas:
    Rent:
      title: Rent
      allOf:
        - $ref: '#/components/schemas/RentDetails'
        - type: object
          properties:
            rentId:
              type: string
              description: The rent id
              example: RNT1234
            currentState:
              type: string
              description: The rent state
              enum:
                - PENDING
                - REJECTED
                - ACCEPTED
                - STARTED
                - ENDED
            acceptedAt:
              type: string
              description: The time when rent has been accepted
              format: date-time
            startedAt:
              type: string
              description: The time when rent has started
              format: date-time
            endedAt:
              type: string
              description: The time when rent has ended
              format: date-time
      x-examples:
        Rent:
          value:
            customerId: CST1234
            vehicleId: VH1234
            rentId: RNT1234
            currentState: PENDING
            acceptedAt: '2019-08-24T14:15:22Z'
            startedAt: '2019-08-24T14:15:22Z'
            endedAt: '2019-08-24T14:15:22Z'
    RentDetails:
      title: RentDetails
      type: object
      properties:
        customerId:
          type: string
          description: The customer id
          example: CST1234
        vehicleId:
          type: string
          description: The vehicle id
          example: VH1234
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        type:
          type: string
          description: The error type
          example: VALIDATION_ERROR
        message:
          type: string
          description: A message explaining the error
          example: A validation error occurred in the request body.
        issues:
          type: array
          description: The list of occurred issues
          items:
            type: object
            properties:
              name:
                type: string
                description: The issue name
                example: engineType
              description:
                type: string
                description: The issue description
                example: engineType must not be null.
      x-examples:
        ValidationError:
          value:
            type: VALIDATION_ERROR
            message: A validation error occurred in the request body.
            issues:
              - name: customerId
                description: The customer id must be not null
